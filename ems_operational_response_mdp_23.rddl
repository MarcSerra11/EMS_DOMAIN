domain ems_operational_response_mdp_23 {

	requirements {
		reward-deterministic,
		integer-valued,
		continuous,
		intermediate-nodes
	};

	types {
		vehicle : object;
		area : { @a1, @a2, @a3};
		number : { @0, @1, @2, @3, @4, @5, @6, @7, @8, @9, @10, @11, @12, @13, @14, @15, @16, @17, @18 };

	};
	
	
	
	pvariables { 
			
		//////////////////// non-fluents ////////////////////
		
		// Area non-fluents
		a_hospital(area) : { non-fluent, bool, default = false };
		a_base(area) : { non-fluent, bool, default = false };
		a_emergencyProbability(area) : { non-fluent, real, default = 0.02 };
		
		// TRAVEL TIME
		aa_travelTime(area, area) : { non-fluent, number, default = @2  };
		
		//REWARDS
		n_PreStabilization(number) : { non-fluent, real, default = -100  };
		n_PreHospitalization(number) : { non-fluent, real, default = -100  };
		
		


		//////////////////// state-fluents ////////////////////
			
		// VEHICLE STATES
		
		// Vehicle on course task
		v_waiting(vehicle) : 			{ state-fluent, bool, default = true };
		v_attendingPatient(vehicle) : 	{ state-fluent, bool, default = false };
		v_waitingHospitalAssign(vehicle):     { state-fluent, bool, default = false };
		v_travelingToHospital(vehicle) : 	{ state-fluent, bool, default = false };
		v_travelingToBase(vehicle) : 		{ state-fluent, bool, default = false };
		
		// Vehicle objective 
		v_assignedPatient(vehicle) : 		{ state-fluent, area, default = @a1 };
		v_assignedHospital(vehicle) : 	{ state-fluent, area, default = @a1 };
		v_assignedBase(vehicle) : 		{ state-fluent, area, default = @a1 };
		
		// Vehicle position
		v_position(vehicle) : 			{ state-fluent, area, default = @a1 };		
		
		// Vehicle remaining action time
		v_remainingActionTime(vehicle) : 	{ state-fluent, number, default = @0 };
		
		
		// AREA STATES
		a_patientGenerate(area) : 		{ state-fluent, bool, default = false };
		a_patientActive(area) : 		{ state-fluent, bool, default = false };
		a_patientStabilized(area) : 		{ state-fluent, bool, default = false };
		a_patientWaitingTime(area) :  	{ state-fluent, number, default = @0 };
		
					
			
		//////////////////// action-fluents ////////////////////

		//VEHICLE ACTIONS
		v_attendPatient(vehicle, area) : { action-fluent, bool, default = false };
		v_travelToHsopital(vehicle, area) : { action-fluent, bool, default = false };
		v_travelToBase(vehicle, area) : { action-fluent, bool, default = false };


	};
	
	cpfs {
	

		// VEHICLE STATES
		
		// Vehicle on course task
		v_waiting'(?v) = if ( exists_{?a : area} [ v_attendPatient(?v, ?a) | v_travelToHsopital(?v, ?a) | v_travelToBase(?v, ?a) ] )
					then false
					else if ( (v_travelingToHospital(?v) | v_travelingToBase(?v) ) & v_remainingActionTime(?v)==@0 )
						then true
						else v_waiting(?v);

		v_attendingPatient'(?v) = if ( exists_{?a : area} [ v_attendPatient(?v, ?a) ] )
						then true
						else if (v_attendingPatient(?v) & v_remainingActionTime(?v)==@0 ) 
							then false
							else v_attendingPatient(?v);
							
							
		v_waitingHospitalAssign'(?v) = if (v_attendingPatient(?v) & v_remainingActionTime(?v)==@0 )
							then true
							else if ( exists_{?a : area} [ v_travelToHsopital(?v, ?a) ] )
								then false
								else v_waitingHospitalAssign(?v);
								
		v_travelingToHospital'(?v) = if (exists_{?a : area} [ v_travelToHsopital(?v, ?a) ])	
							then true
							else if (v_travelingToHospital(?v) & v_remainingActionTime(?v)==@0)	
								then false
								else v_travelingToHospital(?v);
		
		v_travelingToBase'(?v) = if ( exists_{?a : area} [v_travelToBase(?v, ?a)] )
					then true
					else if (v_travelingToBase(?v) & v_remainingActionTime(?v)==@0) 
						then false 
						else v_travelingToBase(?v);
	
	
		//Update vehicle objectives 
		v_assignedPatient'(?v) = 	if (v_attendPatient(?v, @a1)) then @a1
						else if (v_attendPatient(?v, @a2)) then @a2
						else if (v_attendPatient(?v, @a3)) then @a3
						//...
						else v_assignedPatient(?v);
					
		v_assignedHospital'(?v) = 	if (v_travelToHsopital(?v, @a1)) then @a1
						else if (v_travelToHsopital(?v, @a2)) then @a2
						else if (v_travelToHsopital(?v, @a3)) then @a3
						//...
						else v_assignedHospital(?v);
					
		v_assignedBase'(?v) = 	if (v_travelToBase(?v, @a1)) then @a1
					else if (v_travelToBase(?v, @a2)) then @a2
					else if (v_travelToBase(?v, @a3)) then @a3
					//...
					else v_assignedBase(?v);
					

		//Update vehicle position
		v_position'(?v) = 	if (v_attendingPatient(?v) & v_remainingActionTime(?v)==@0 ) then v_assignedPatient(?v)
					else if (v_travelingToHospital(?v) & v_remainingActionTime(?v)==@0 ) then v_assignedHospital(?v)
					else if (v_travelingToBase(?v) & v_remainingActionTime(?v)==@0 ) then v_assignedBase(?v)
					else v_position(?v);
		
						
		// Vehicle remaining action time
		v_remainingActionTime'(?v) = 	//Decrease of executing action time
						if (v_remainingActionTime(?v)==@8) then @7
						else if (v_remainingActionTime(?v)==@7) then @6
						else if (v_remainingActionTime(?v)==@6) then @5
						else if (v_remainingActionTime(?v)==@5) then @4
						else if (v_remainingActionTime(?v)==@4) then @3
						else if (v_remainingActionTime(?v)==@3) then @2
						else if (v_remainingActionTime(?v)==@2) then @1
						else if (v_remainingActionTime(?v)==@1) then @0
						
						//New action
						else if (v_position(?v)==@a1 & (v_attendPatient(?v, @a1) | v_travelToHsopital(?v, @a1) | v_travelToBase(?v, @a1) ) ) then ( aa_travelTime(@a1, @a1) ) 
						else if (v_position(?v)==@a2 & (v_attendPatient(?v, @a1) | v_travelToHsopital(?v, @a1) | v_travelToBase(?v, @a1) ) ) then ( aa_travelTime(@a2, @a1) )
						else if (v_position(?v)==@a3 & (v_attendPatient(?v, @a1) | v_travelToHsopital(?v, @a1) | v_travelToBase(?v, @a1) ) ) then ( aa_travelTime(@a3, @a1) ) 
						
						else if (v_position(?v)==@a1 & (v_attendPatient(?v, @a2) | v_travelToHsopital(?v, @a2) | v_travelToBase(?v, @a2) ) ) then ( aa_travelTime(@a1, @a2) ) 
						else if (v_position(?v)==@a2 & (v_attendPatient(?v, @a2) | v_travelToHsopital(?v, @a2) | v_travelToBase(?v, @a2) ) ) then ( aa_travelTime(@a2, @a2) )
						else if (v_position(?v)==@a3 & (v_attendPatient(?v, @a2) | v_travelToHsopital(?v, @a2) | v_travelToBase(?v, @a2) ) ) then ( aa_travelTime(@a3, @a2) ) 
						
						else if (v_position(?v)==@a1 & (v_attendPatient(?v, @a3) | v_travelToHsopital(?v, @a3) | v_travelToBase(?v, @a3) ) ) then ( aa_travelTime(@a1, @a3) ) 
						else if (v_position(?v)==@a2 & (v_attendPatient(?v, @a3) | v_travelToHsopital(?v, @a3) | v_travelToBase(?v, @a3) ) ) then ( aa_travelTime(@a2, @a3) )
						else if (v_position(?v)==@a3 & (v_attendPatient(?v, @a3) | v_travelToHsopital(?v, @a3) | v_travelToBase(?v, @a3) ) ) then ( aa_travelTime(@a3, @a3) )  
						
						//...
						
						else @0; 			
						
		
		//UPDATE AREA STATES 
		
		a_patientGenerate'(?a) = if ( ~ a_patientActive(?a) ) then Bernoulli( a_emergencyProbability(?a) )
					else false;
		
		a_patientActive'(?a) = if (a_patientGenerate(?a)) then true
					else if ( exists_{?v : vehicle} [ v_assignedPatient(?v)==?a & v_travelingToHospital(?v) & v_remainingActionTime(?v)==@0 ] ) then false
					else a_patientActive(?a); 
		
		
		a_patientStabilized'(?a) = if (a_patientGenerate(?a)) then false
					   	else if ( exists_{?v : vehicle} [ v_assignedPatient(?v)==?a & v_attendingPatient(?v) & v_remainingActionTime(?v)==@0 ] ) then true
						else a_patientStabilized(?a);	
		
		
		a_patientWaitingTime'(?a) = 	if (a_patientGenerate(?a)) then @0
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@0) then @1
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@1) then @2
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@2) then @3
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@3) then @4
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@4) then @5
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@5) then @6
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@6) then @7
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@7) then @8
						//...
						else a_patientWaitingTime(?a); 
		
		
	};
  
	
	reward = 	
			(sum_{?a : area} [ 	if (a_patientActive(?a) & a_patientWaitingTime(?a)==@0) then ( (~a_patientStabilized(?a))*n_PreStabilization(@0) + (a_patientStabilized(?a))*n_PreHospitalization(@0) )    
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@1) then ( (~a_patientStabilized(?a))*n_PreStabilization(@1) + (a_patientStabilized(?a))*n_PreHospitalization(@1) )
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@2) then ( (~a_patientStabilized(?a))*n_PreStabilization(@2) + (a_patientStabilized(?a))*n_PreHospitalization(@2) )
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@3) then ( (~a_patientStabilized(?a))*n_PreStabilization(@3) + (a_patientStabilized(?a))*n_PreHospitalization(@3) )
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@4) then ( (~a_patientStabilized(?a))*n_PreStabilization(@4) + (a_patientStabilized(?a))*n_PreHospitalization(@4) )
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@5) then ( (~a_patientStabilized(?a))*n_PreStabilization(@5) + (a_patientStabilized(?a))*n_PreHospitalization(@5) )
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@6) then ( (~a_patientStabilized(?a))*n_PreStabilization(@6) + (a_patientStabilized(?a))*n_PreHospitalization(@6) )
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@7) then ( (~a_patientStabilized(?a))*n_PreStabilization(@7) + (a_patientStabilized(?a))*n_PreHospitalization(@7) )
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@8) then ( (~a_patientStabilized(?a))*n_PreStabilization(@8) + (a_patientStabilized(?a))*n_PreHospitalization(@8) )
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@9) then ( (~a_patientStabilized(?a))*n_PreStabilization(@9) + (a_patientStabilized(?a))*n_PreHospitalization(@9) )
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@10) then ( (~a_patientStabilized(?a))*n_PreStabilization(@10) + (a_patientStabilized(?a))*n_PreHospitalization(@10) )
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@11) then ( (~a_patientStabilized(?a))*n_PreStabilization(@11) + (a_patientStabilized(?a))*n_PreHospitalization(@11) )
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@12) then ( (~a_patientStabilized(?a))*n_PreStabilization(@12) + (a_patientStabilized(?a))*n_PreHospitalization(@12) )
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@13) then ( (~a_patientStabilized(?a))*n_PreStabilization(@13) + (a_patientStabilized(?a))*n_PreHospitalization(@13) )
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@14) then ( (~a_patientStabilized(?a))*n_PreStabilization(@14) + (a_patientStabilized(?a))*n_PreHospitalization(@14) )
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@15) then ( (~a_patientStabilized(?a))*n_PreStabilization(@15) + (a_patientStabilized(?a))*n_PreHospitalization(@15) )
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@16) then ( (~a_patientStabilized(?a))*n_PreStabilization(@16) + (a_patientStabilized(?a))*n_PreHospitalization(@16) )
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@17) then ( (~a_patientStabilized(?a))*n_PreStabilization(@17) + (a_patientStabilized(?a))*n_PreHospitalization(@17) )
						else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@18) then ( (~a_patientStabilized(?a))*n_PreStabilization(@18) + (a_patientStabilized(?a))*n_PreHospitalization(@18) )
						//else if (a_patientActive(?a) & a_patientWaitingTime(?a)==@19) then ( (~a_patientStabilized(?a))*n_PreStabilization(@2) + (a_patientStabilized(?a))*n_PreHospitalization(@2) )
						//...
						else 0 ]);
	
	state-invariants {
		
		(forall_{?v : vehicle} [v_waiting(?v) | v_attendingPatient(?v) | v_waitingHospitalAssign(?v) | v_travelingToHospital(?v) | v_travelingToBase(?v) ] );
	
	};
	
	
						
	action-preconditions {
	
		//Execute only one action
		(forall_{?v : vehicle} [ (sum_{?a : area} [v_attendPatient(?v, ?a)+v_travelToHsopital(?v, ?a)+v_travelToBase(?v, ?a)])  <= 1] );

		//Actions preconditions		
		( forall_{?v : vehicle} [  forall_{?a : area} [ v_attendPatient(?v, ?a) => ((v_waiting(?v) | v_travelingToBase(?v)) & a_patientActive(?a)) ] ]);
		( forall_{?v : vehicle} [  forall_{?a : area} [ v_travelToHsopital(?v, ?a) => (v_waitingHospitalAssign(?v) & a_hospital(?a)) ] ]);
		( forall_{?v : vehicle} [  forall_{?a : area} [ v_travelToBase(?v, ?a) => (v_waiting(?v) & a_base(?a)) ] ]);
		
		//Only one ambulance can be assigned to a patient at the same time
		( forall_{?a : area} [	 (sum_{?v : vehicle} [v_attendPatient(?v, ?a)]) <=1  ] );
		
		//If an ambulance is assigned to a patient, another can not be assigned in the future
		( forall_{?a : area} [	 (exists_{?v : vehicle} [v_attendPatient(?v, ?a)]) =>  ~(exists_{?v : vehicle} [v_assignedPatient(?v)==?a & v_attendingPatient(?v) ]) ] );
		
		//Once a patient is stabilised must be trasferred to a hospital
		( forall_{?v : vehicle} [ v_waitingHospitalAssign(?v) => (exists_{?a : area} [v_travelToHsopital(?v, ?a)]) ]);
		
		//Once a patient is transferred to a hospital the vehicle must be assigned to a patient or return to a base
		( forall_{?v : vehicle} [ (v_travelingToHospital(?v) & v_remainingActionTime(?v)==@0) =>  (exists_{?a : area} [v_attendPatient(?v, ?a) | v_travelToBase(?v, ?a) ] ) ] );

			
				
	
	};
	

}

